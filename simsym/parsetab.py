
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftHATleftDIVIDEDIVIDE HAT LENGTH MASS NUM ONE TIMEstatement : expression\n               | expression DIVIDE expression\n               | NUM DIVIDE expressionexpression : dimension\n                | dimension expression\n                | dimension HAT number\n                | dimension HAT number expressiondimension : LENGTH\n                | MASS\n                | TIMEnumber : NUM'
    
_lr_action_items = {'NUM':([0,11,],[3,15,]),'LENGTH':([0,4,5,6,7,8,9,14,15,],[5,5,-8,-9,-10,5,5,5,-11,]),'MASS':([0,4,5,6,7,8,9,14,15,],[6,6,-8,-9,-10,6,6,6,-11,]),'TIME':([0,4,5,6,7,8,9,14,15,],[7,7,-8,-9,-10,7,7,7,-11,]),'$end':([1,2,4,5,6,7,10,12,13,14,15,16,],[0,-1,-4,-8,-9,-10,-5,-2,-3,-6,-11,-7,]),'DIVIDE':([2,3,4,5,6,7,10,14,15,16,],[8,9,-4,-8,-9,-10,-5,-6,-11,-7,]),'HAT':([4,5,6,7,],[11,-8,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,8,9,14,],[2,10,12,13,16,]),'dimension':([0,4,8,9,14,],[4,4,4,4,4,]),'number':([11,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_div','DimensionParser.py',42),
  ('statement -> expression DIVIDE expression','statement',3,'p_statement_div','DimensionParser.py',43),
  ('statement -> NUM DIVIDE expression','statement',3,'p_statement_div','DimensionParser.py',44),
  ('expression -> dimension','expression',1,'p_expression_hat','DimensionParser.py',54),
  ('expression -> dimension expression','expression',2,'p_expression_hat','DimensionParser.py',55),
  ('expression -> dimension HAT number','expression',3,'p_expression_hat','DimensionParser.py',56),
  ('expression -> dimension HAT number expression','expression',4,'p_expression_hat','DimensionParser.py',57),
  ('dimension -> LENGTH','dimension',1,'p_dimension','DimensionParser.py',67),
  ('dimension -> MASS','dimension',1,'p_dimension','DimensionParser.py',68),
  ('dimension -> TIME','dimension',1,'p_dimension','DimensionParser.py',69),
  ('number -> NUM','number',1,'p_number','DimensionParser.py',72),
]
